1. Install spire agent in target cluster. 
2. Install csi driver in target cluster 
3. We shall be using a custon label â€œspire.io/cluster=istio-d" in pods 
4. Use  istio-spire-config-omega.yaml to install istio in the cluster. 
 

It is very important that all SPIRE components and SPIFFE CSI driver componenets use /run/secrets/workload-spiffe-uds as the UDS path inside the pods. This is required for istio to correctly identify SPIRE socket path.
Also note that we are using a pod label spire.io/cluster:istio-d to attest service accounts by cluster name.


Create node registrations in our external SPIRE server as follows: 

 

/opt/spire/spire-server entry create \ 

    -spiffeID spiffe://wl.dev.omegaworld.net/ns/spire/sa/spire-agent \ 

    -selector k8s_psat:cluster:istio-d \ 

    -selector k8s_psat:agent_ns:spire \ 

    -selector k8s_psat:agent_sa:spire-agent \ 

    -node \ 

    -socketPath /tmp/spire-server/private/api.sock 

  

  

/opt/spire/spire-server entry create \ 

    -spiffeID spiffe://wl.dev.omegaworld.net/ns/istio-system/sa/istio-egressgateway-service-account \ 

    -parentID spiffe://wl.dev.omegaworld.net/ns/spire/sa/spire-agent \ 

    -selector k8s:ns:istio-system \ 

    -selector k8s:sa:istio-egressgateway-service-account \ 

    -selector k8s:pod-label:spire.io/cluster:istio-d 

  

/opt/spire/spire-server entry create \ 

    -spiffeID spiffe://wl.dev.omegaworld.net/ns/istio-system/sa/istio-ingressgateway-service-account \ 

    -parentID spiffe://wl.dev.omegaworld.net/ns/spire/sa/spire-agent \ 

    -selector k8s:ns:istio-system \ 

    -selector k8s:sa:istio-ingressgateway-service-account \ 

    -selector k8s:pod-label:spire.io/cluster:istio-d 
